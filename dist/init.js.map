{
  "version": 3,
  "sources": ["../node_modules/js-cookie/dist/js.cookie.mjs", "../src/util.ts", "../src/init.ts"],
  "sourcesContent": ["/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport { api as default };\n", "\n\n// Determine Webflow breakpoint?\n\n\n// Utility function to get a query parameter value by name\nexport function getQueryParam(name: string): string | null {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get(name);\n}\n\n\n// Add a new async script to the page\n// at the end of the body\nexport function loadScript(url: string): void {\n    const script = document.createElement('script');\n    script.src = url;\n\nconsole.log(\"loading script\", url); \n\n//    script.async = true;\n    document.body.appendChild(script);\n}\n\n// Add a new CSS file to the page\nexport function loadCSS(url: string): void {\n    const link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = url;\n    document.head.appendChild(link);\n}\n\n// Replace an existing script source\nexport function replaceScriptSource(element: HTMLScriptElement, newSrc: string): void {\n    element.src = newSrc;\n}\n\n// Replace an existing CSS source\nexport function replaceCSSLink(element: HTMLLinkElement, newHref: string): void {\n    element.href = newHref;\n}\n\n// Function to prepend text to the document title in development mode\nexport function prependToTitle(text: string): void {\n    document.title = `${text}${document.title}`;\n}\n\n// Function to get the current script URL\nexport function getCurrentScriptUrl(): string | null {\n    // Check if document.currentScript is supported\n    if (document.currentScript) {\n        // Cast to HTMLScriptElement and get the src attribute\n        const currentScript = document.currentScript as HTMLScriptElement;\n        return currentScript.src;\n    }\n    // For browsers that do not support document.currentScript\n    console.error(\"document.currentScript is not supported in this browser.\");\n    return null;\n}\n\n\nexport function findAncestorWithAttribute(element: HTMLElement, attributeName: string): HTMLElement | null {\n    let currentElement: HTMLElement | null = element;\n\n    while (currentElement) {\n        if (currentElement.hasAttribute(attributeName)) {\n            return currentElement;\n        }\n        currentElement = currentElement.parentElement;\n    }\n\n    return null;\n}\n\nexport function getAncestorAttributeValue(element: HTMLElement, attributeName: string): string | null {\n    let currentElement: HTMLElement | null = element;\n\n    while (currentElement) {\n        if (currentElement.hasAttribute(attributeName)) {\n            return currentElement.getAttribute(attributeName);\n        }\n        currentElement = currentElement.parentElement;\n    }\n\n    return null;\n}\n\nexport function hasAncestorWithAttribute(element: HTMLElement, attributeName: string): boolean {\n    return findAncestorWithAttribute(element, attributeName) !== null;\n}\n\nexport function convertToPixels(value: string, contextElement: HTMLElement = document.documentElement): number {\n    // Parse the numeric value and unit, including negative values\n    const match = value.match(/^(-?\\d+\\.?\\d*)(rem|em|px|vh|vw|%)$/);\n    if (!match) throw new Error('Invalid value format');\n\n    const [, amountStr, unit] = match;\n    const amount = parseFloat(amountStr);\n\n    // Convert based on the unit\n    switch (unit) {\n        case 'px':\n            return amount;\n        case 'rem':\n            return amount * parseFloat(getComputedStyle(document.documentElement).fontSize);\n        case 'em':\n            // For 'em', it's relative to the font-size of the context element.\n            return amount * parseFloat(getComputedStyle(contextElement).fontSize);\n        case 'vh':\n            return amount * window.innerHeight / 100;\n        case 'vw':\n            return amount * window.innerWidth / 100;\n        case '%':\n            // For %, it's relative to the parent element's size. This can be tricky as it depends on the property (width, height, font-size, etc.).\n            // In this example, we'll use it relative to the width of the context element, but you might need to adjust based on your specific use case.\n            return amount * contextElement.clientWidth / 100;\n        default:\n            throw new Error('Unsupported unit');\n    }\n}\n\n\n/*\n// Example usage:\nconst pixelValue = convertToPixels(\"10vh\");\nconsole.log(pixelValue);\n*/\n\n", "/*\n * Loader  \n * Main entry point\n * \n */\n\nimport Cookies from 'js-cookie';\nimport { getCurrentScriptUrl, getQueryParam, loadScript, prependToTitle, replaceCSSLink } from './util';\n\n\n\nfunction initEngine() {\n\n    console.log(\"Init engine.\");\n\n    // Process any engine mode commands \n    const engineModeCommand = getQueryParam('engine.mode');\n    switch(engineModeCommand) {\n        case 'dev':\n            Cookies.set('siteEngineMode', 'dev', { expires: 7 });\n            break;\n        case 'prod':\n            Cookies.remove('siteEngineMode');\n            break;\n        default:\n            // Do nothing, keep existing engine state \n            break;\n    }\n\n    // Get current engine mode\n    const engineMode = Cookies.get('siteEngineMode') || \"prod\";\n\n    /**\n     * ENGINE MODE\n     */\n\n    switch(engineMode) {\n        case 'dev':\n            invokeDebugMode(); \n            break;\n        case 'prod':\n        default:\n            const scriptUrl = getCurrentScriptUrl();\n            if (scriptUrl) {\n                console.log(\"Current script URL:\", scriptUrl);\n    \n                const engineScriptUrl = scriptUrl.replace('init.js', 'index.js');\n                console.log(\"New script URL:\", engineScriptUrl);\n                \n                loadScript(engineScriptUrl);\n                break;\n            } \n    }\n\n}\n\ninitEngine();\n\n\nfunction invokeDebugMode() {\n\n    // Prepend to the document title\n    prependToTitle(\"\uD83C\uDD73\uD83C\uDD74\uD83C\uDD85 \u279C \");\n\n    // Handle scripts\n    const scripts = document.querySelectorAll<HTMLScriptElement>('script');\n    scripts.forEach(script => {\n        const devSrc = script.getAttribute('dev-src');\n        if (devSrc) {\n            loadScript(devSrc);\n        }\n    });\n\n    // Handle CSS\n    const links = document.querySelectorAll<HTMLLinkElement>('link[rel=\"stylesheet\"]');\n    links.forEach(link => {\n        const devHref = link.getAttribute('dev-src');\n        if (devHref) {\n            replaceCSSLink(link, devHref);\n        }\n    });\n\n    // // Load additional scripts and CSS based on the mode\n    // if (debugMode) {\n    //     loadScript('https://cdn.jsdelivr.net/your-library/debug/library.js');\n    //     loadCSS('https://cdn.jsdelivr.net/your-library/debug/styles.css');\n    // } else {\n    //     loadScript('https://cdn.jsdelivr.net/your-library/prod/library.js');\n    //     loadCSS('https://cdn.jsdelivr.net/your-library/prod/styles.css');\n    // }\n\n}\n\n//});\n"],
  "mappings": "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",
  "names": ["converter"]
}
